h1. fusion-tables

This API lets you easily upload data to Google Fusion Tables from your Ruby application.

h2. Installation

gem install fusion-tables

h2. API examples
 
The best place to see what's going on is in the tests, but this is a good starting point.

<code>
	
# Connect to service	
@ft = GData::Client::FusionTables.new      
@ft.clientlogin(username, password)

# Create a new table

# Configure the columns you want
cols = [{:name => "boat name"		, :datatype => 'string' },
				{:name => "value"		 		, :datatype => 'number' },
				{:name => "when bought"	, :datatype => 'datetime' },
				{:name => "where"		 		, :datatype => 'location' }]

# Create the table				
@table = @ft.create_table "My yacht locations", cols
@table.id #=> 42342 (the table's google id)

# Insert data

# Update data

# Delete data

# Drop tables
@ft.drop @table.id										# table id
@ft.drop [@table1.id, @table2.id]			# arrays of table ids
@ft.drop /yacht/ 											# regex 


</code>

h2. Fusion Tables secret Geospatial Sauce

Fusion Tables is a labs product from Google. You can "read more here":http://tables.googlelabs.com/, but the key thing is that it gives you *access to the google tile mill for ultra-fast generating of custom google map layers across massive datasets* 

Fusion Tables supports the following geometry types:

* lat/long
* addresses (automatically geocodes them for you)
* KML (point, polyline, polygon, multipolygon)

h2. Thousands of geometries rendered in near real time, integrated with google maps v3

Adding a fusion tables datalayer with a zillion points/polygons to your v3 map is as simple as:

<code>
layer = new google.maps.FusionTablesLayer(139529);
</code>

That's it

You can also refine the tiles by SQL, and can even do so dynamically:

<code>
layer = new google.maps.FusionTablesLayer(198945, {
  query: "SELECT address FROM 198945 WHERE ridership > 5000"}
);
</code>

Finally, fusion tables also lets you make Heatmaps

<code>
layer = new google.maps.FusionTablesLayer(136705, {
  heatmap: true
});
</code>

As an example, here are all the Gasoline filling stations in the UK:

<iframe width="500px" height="300px" scrolling="no"  src="http://tables.googlelabs.com/embedviz?viz=MAP&q=select+col0%2Ccol1%2Ccol2%2Ccol3%2Ccol4%2Ccol5%2Ccol6%2Ccol12%2Ccol13%2Ccol14%2Ccol15%2Ccol16%2Ccol17%2Ccol18%2Ccol19%2Ccol20%2Ccol21+from+214045+&h=false&lat=53.35710874569601&lng=-1.9775390625&z=5&l=col0"></iframe>

read "more here":http://code.google.com/apis/maps/documentation/javascript/overlays.html#FusionTables

h2. A word of warning...

# Google has a recent habit of deleting projects. This is still a labs project, and may disappear at any time
# The API is still very young and *will change* 
# Currently you have to make a table public before you can display it on a map, unfortunately, this can only be done on the web interface. A suggested workaround is to put all your data in 1 big public table, and then query for the data you want to display based off a key/flag column

h2. Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

h2. Copyright

Largely based on Tom Verbeure's work for MTBGuru: http://code.google.com/p/mtbguru-fusiontables/

Copyright (c) 2010 Simon Tokumine. See LICENSE for details.




